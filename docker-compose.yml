services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG_LEVEL: ERROR
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: ERROR
      ZOOKEEPER_LOG4J_LOGGERS: "org.apache.zookeeper=ERROR,org.apache.zookeeper.server=ERROR"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
      - ./zookeeper-log4j.properties:/etc/kafka/zookeeper-log4j.properties
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_LOG4J_LOGGERS: "kafka=ERROR,org.apache.kafka=ERROR,kafka.server.KafkaConfig=ERROR,kafka.controller=ERROR,state.change.logger=ERROR,kafka.server.KafkaServer=ERROR,kafka.zookeeper=ERROR,kafka.log=ERROR,kafka.network=ERROR,kafka.coordinator=ERROR"
      KAFKA_LOG4J_APPENDERS: "console"
      KAFKA_LOG4J_APPENDER_CONSOLE_LAYOUT_CONVERSIONPATTERN: "[%d{ISO8601}][%-5p][%-25c{1.}] %m%n"
      KAFKA_LOG4J_CONFIG: "/etc/kafka/log4j.properties"
    volumes:
      - kafka-data:/var/lib/kafka/data
      - ./kafka-log4j.properties:/etc/kafka/log4j.properties
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  spark:
    image: bitnami/spark:3.5.6
    hostname: spark
    container_name: spark
    ports:
      - "4040:4040"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_LOG_LEVEL=ERROR
    volumes:
      - ./data:/opt/bitnami/spark/work
      - ./output:/opt/bitnami/spark/output
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  tunetracker:
    build: .
    container_name: tunetracker
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - ./output:/app/output
      - ./checkpoint:/app/checkpoint
      - ./demo_output:/app/demo_output
    command:
      [
        "poetry",
        "run",
        "tunetracker",
        "demo",
        "--bootstrap-servers",
        "kafka:29092",
        "--duration",
        "120",
      ]

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
